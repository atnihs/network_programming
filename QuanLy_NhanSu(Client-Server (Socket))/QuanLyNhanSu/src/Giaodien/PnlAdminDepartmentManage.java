package Giaodien;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import XyLyDuLieu.*;
import TienIch.ValidateFormTools;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableModel;

public class PnlAdminDepartmentManage extends javax.swing.JPanel {

    public static String IpAddress;

    /**
     * Tạo mới form ManageDepartment
     */
    public PnlAdminDepartmentManage() {
        initComponents();

        loadTableData();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTop = new javax.swing.JPanel();
        pnlEditDepartment = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        tfEditDepartmentID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfEditDepartmentName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        pnlAddDepartment = new javax.swing.JPanel();
        btnAddNew = new javax.swing.JButton();
        tfAddDepartmentID = new javax.swing.JTextField();
        tfAddDepartmentName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pnlBottom = new javax.swing.JPanel();
        spnlDepartmentData = new javax.swing.JScrollPane();
        txtData = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(791, 655));
        setLayout(new java.awt.BorderLayout());

        pnlTop.setLayout(new java.awt.BorderLayout());

        pnlEditDepartment.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sửa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlEditDepartment.setPreferredSize(new java.awt.Dimension(707, 80));

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_save.png"))); // NOI18N
        btnUpdate.setText("Lưu");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tfEditDepartmentID.setEditable(false);
        tfEditDepartmentID.setEnabled(false);

        jLabel4.setText("Mã phòng ban");

        jLabel3.setText("Tên phòng ban");

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEditDepartmentLayout = new javax.swing.GroupLayout(pnlEditDepartment);
        pnlEditDepartment.setLayout(pnlEditDepartmentLayout);
        pnlEditDepartmentLayout.setHorizontalGroup(
            pnlEditDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditDepartmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfEditDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(tfEditDepartmentName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pnlEditDepartmentLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnUpdate});

        pnlEditDepartmentLayout.setVerticalGroup(
            pnlEditDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditDepartmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfEditDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(tfEditDepartmentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pnlTop.add(pnlEditDepartment, java.awt.BorderLayout.CENTER);

        pnlAddDepartment.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tạo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlAddDepartment.setPreferredSize(new java.awt.Dimension(707, 80));

        btnAddNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_add.png"))); // NOI18N
        btnAddNew.setText("Tạo mới");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        tfAddDepartmentID.setEditable(false);
        tfAddDepartmentID.setEnabled(false);

        jLabel6.setText("Mã phòng ban");

        jLabel5.setText("Tên phòng ban");

        javax.swing.GroupLayout pnlAddDepartmentLayout = new javax.swing.GroupLayout(pnlAddDepartment);
        pnlAddDepartment.setLayout(pnlAddDepartmentLayout);
        pnlAddDepartmentLayout.setHorizontalGroup(
            pnlAddDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddDepartmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfAddDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(4, 4, 4)
                .addComponent(tfAddDepartmentName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );
        pnlAddDepartmentLayout.setVerticalGroup(
            pnlAddDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddDepartmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAddDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNew)
                    .addComponent(jLabel6)
                    .addComponent(tfAddDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(tfAddDepartmentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pnlTop.add(pnlAddDepartment, java.awt.BorderLayout.PAGE_START);

        add(pnlTop, java.awt.BorderLayout.PAGE_START);

        pnlBottom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách phòng ban", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlBottom.setLayout(new java.awt.BorderLayout());

        spnlDepartmentData.setBorder(null);

        txtData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Stt", "Tên phòng ban", "Số nhân sự"
            }
        ));
        txtData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDataMouseClicked(evt);
            }
        });
        spnlDepartmentData.setViewportView(txtData);

        pnlBottom.add(spnlDepartmentData, java.awt.BorderLayout.CENTER);

        add(pnlBottom, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
private Socket connect() throws Exception {
        //1.client: tao socket ket noi den server cho phep ket noi o cong 8080
        String addip;
        addip = IpAddress;
        Socket sk = new Socket(addip, 9876);
        System.out.println("Client da duoc tao...");

        return sk;
    }

    private String connectToServer() throws Exception {

        Socket sk = connect();

        //3.3 tao luon ket noiw den sever
        DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
        DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

        gui_server.writeUTF("showAll");// gui du lieu len server

        String ketqua = nhan_server.readUTF();
        System.out.println("Client gui:" + ketqua);//doc tu sever
        sk.close();

        return ketqua;
    }
    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        if (validateAddNew()) {
            // Department deptObj = new Department();
            //deptObj.setDepartmentID(0);
            //deptObj.setDepartmentName(tfAddDepartmentName.getText());

            try {

                //DepartmentDAO.insertDepartment(deptObj);
                Socket sk = connect();
                String chen = "addpm";

                //3.3 tao luon ket noi den sever
                DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

                gui_server.writeUTF(tfAddDepartmentName.getText() + "#" + chen);// gui du lieu len server
                String result = nhan_server.readUTF();
                System.out.println("ket qua tu server:" + result);//doc tu sever
                sk.close();

                JOptionPane.showMessageDialog(null, "Phòng ban mới được đưa vào thành công");
                loadTableData();
                tfAddDepartmentName.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            } catch (IOException ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

}//GEN-LAST:event_btnAddNewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (tfEditDepartmentID.getText().compareTo("") != 0) {
            if (validateEdit()) {
                //Department deptObj = new Department();
                // deptObj.setDepartmentID(Integer.parseInt(tfEditDepartmentID.getText()));
                // deptObj.setDepartmentName(tfEditDepartmentName.getText());

                try {
                    // DepartmentDAO.updateDepartment(deptObj);
                    Socket sk = connect();
                    String chen = "editpm";

                    //3.3 tao luon ket noi den sever
                    DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                    DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

                    gui_server.writeUTF(tfEditDepartmentID.getText() + "#" + tfEditDepartmentName.getText() + "#" + chen);// gui du lieu len server
                    String result = nhan_server.readUTF();
                    System.out.println("ket qua tu server:" + result);//doc tu sever
                    sk.close();
                    JOptionPane.showMessageDialog(null, "Phòng ban được cập nhật thành công");
                    loadTableData();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Không cập nhật !", "Cập nhật lỗi", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Không cập nhật !", "Cập nhật lỗi", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                } catch (IOException ex) {
                    Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn một hàng ở dưới!!!",
                    "Không chọn hàng nào", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (txtData.getSelectedRowCount() != 0) {
                if (JOptionPane.showConfirmDialog(null,
                        " Bạn có thực sự muốn xóa Phòng ban này ?",
                        "Xác nhận xóa",
                        JOptionPane.OK_CANCEL_OPTION)
                        == JOptionPane.OK_OPTION) {
                    try {
                        Socket sk = connect();
                        String chen = "deletepm";

                        //3.3 tao luon ket noi den sever
                        DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                        DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

                        gui_server.writeUTF(tfEditDepartmentID.getText() + "#" + chen);// gui du lieu len server
                        String result = nhan_server.readUTF();
                        System.out.println("ket qua tu server:" + result);//doc tu sever
                        sk.close();
                        //DepartmentDAO.deleteDepartment(Integer.parseInt(tfEditDepartmentID.getText()));
                        JOptionPane.showMessageDialog(null, "Xóa thành công");
                        loadTableData();
                        tfEditDepartmentID.setText("");
                        tfEditDepartmentName.setText("");

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Không xóa được!", "Xóa bị lỗi", JOptionPane.ERROR_MESSAGE);
                        ex.printStackTrace();
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(null, "Không xóa được!", "Xóa bị lỗi", JOptionPane.ERROR_MESSAGE);
                        ex.printStackTrace();
                    } catch (IOException ex) {
                        Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (Exception ex) {
                        Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    
     private void loadEditData()//Nhận dữ liệu từ bảng để chỉnh sửa , khi người dùng click vào một hàng hoặc sử dụng phím lên / xuống
    {
        
        int index = txtData.getSelectedRow();
        TableModel model = txtData.getModel();
        tfEditDepartmentID.setText(model.getValueAt(index, 0).toString());
        tfEditDepartmentName.setText(model.getValueAt(index, 1).toString());
    }
    private void txtDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDataMouseClicked
        // TODO add your handling code here:
        loadEditData();
    }//GEN-LAST:event_txtDataMouseClicked

    //Xác nhận hình thức trước khi ADDnew
    private boolean validateAddNew() {
        String msg = "";
        /*Kiểm tra tên phòng ban có trống?*/
        if (!ValidateFormTools.isFilledTextField(tfAddDepartmentName, true))//cắt các văn bản trong tfAddDepartmentName , kiểm tra trống
        {
            msg += "\n- Tên Phòng ban không thể để trống";
        }
        tfAddDepartmentName.setText(tfAddDepartmentName.getText().trim());

        if (msg.compareTo("") != 0) {
            JOptionPane.showMessageDialog(null,
                    "Có một số lỗi" + msg,
                    "Lỗi: Thêm mới",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    //Xác nhận xóa Phòng ban nếu Phòng ban không có nhân viên
    private boolean validateDelete() {
        int rowIndex = txtData.getSelectedRow();
        int EmpNo = Integer.parseInt(tblModel.getValueAt(rowIndex, 2).toString());
        int ToNo = Integer.parseInt(tblModel.getValueAt(rowIndex, 3).toString());
        int FromNo = Integer.parseInt(tblModel.getValueAt(rowIndex, 4).toString());
        if (EmpNo == 0 && ToNo == 0 & FromNo == 0)//Đảm bảo không có đối tượng phụ thuộc
        {
            return true;
        } else {
            JOptionPane.showMessageDialog(null,
                    "Bạn không thể xóa Phòng ban này.\n  Có số nhân viên thuộc phòng ban này",
                    "Lỗi: Xóa",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    //Nhận dữ liệu từ hàng chọn và tải dữ liệu vào bảng chỉnh sửa
    private void getEditData() {
        int rowIndex = txtData.getSelectedRow();
        tfEditDepartmentID.setText(tblModel.getValueAt(rowIndex, 0).toString());
        tfEditDepartmentName.setText(tblModel.getValueAt(rowIndex, 1).toString());
    }

    //Xác định đk trước khi thực hiện chỉnh sửa
    private boolean validateEdit() {
        String msg = "";
        if (!ValidateFormTools.isFilledTextField(tfEditDepartmentName, true))//cắt các văn bản trong tftfEditDepartmentName, kiểm tra trống
        {
            msg += "\n- Tên phòng ban không thể để trống";
        }
        tfEditDepartmentName.setText(tfEditDepartmentName.getText().trim());
        if (msg.compareTo("") != 0) {
            JOptionPane.showMessageDialog(null,
                    "Có lỗi" + msg,
                    "Lỗi: Sửa",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private void handleReturnData(String result) {

        DefaultTableModel model = (DefaultTableModel) txtData.getModel();//xuat ra tabe
        model.getDataVector().clear();
        if (null != result && !result.equals("OK") && !result.equals("DBError")) {
            String[] students = result.split(";");
            if (null != students && students.length != 0) {
                for (int i = 0; i < students.length; i++) {
                    String student = students[i];
                    if (null != student && !student.isEmpty()) {
                        String[] parts = student.split(",");
                        model.addRow(new Object[]{parts[0], parts[1], parts[2]});
                    }
                }
            }
        }
    }

    //Tải dữ liệu vào bảng
    private void loadTableData() {

        Socket sk;
        try {
            sk = connect();
            String chen = "xemDataDepM";

            //3.3 tao luon ket noi den sever
            DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
            DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

            gui_server.writeUTF("#" + chen);// gui du lieu len server
            String result = nhan_server.readUTF();
            System.out.println("Server trả về: " + result);//doc tu sever
            handleReturnData(result);

            sk.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,
                    "Kết nối đến server thât bại.",
                    "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel pnlAddDepartment;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlEditDepartment;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JScrollPane spnlDepartmentData;
    private javax.swing.JTextField tfAddDepartmentID;
    private javax.swing.JTextField tfAddDepartmentName;
    private javax.swing.JTextField tfEditDepartmentID;
    private javax.swing.JTextField tfEditDepartmentName;
    private javax.swing.JTable txtData;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel tblModel = new DefaultTableModel();
}
