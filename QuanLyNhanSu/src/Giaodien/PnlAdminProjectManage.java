package Giaodien;

import static Giaodien.PnlAdminDepartmentManage.IpAddress;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import XyLyDuLieu.*;
import TienIch.*;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

public class PnlAdminProjectManage extends javax.swing.JPanel {

    /**
     * Creates new form ProjectUIPanel
     */
    public static String IpAddress;
    public PnlAdminProjectManage() {
        initComponents();
        loadTableData();
    }

    private Socket connect() throws Exception {
        //1.client: tao socket ket noi den server cho phep ket noi o cong 8080
        String addip;
        addip = IpAddress;
        Socket sk = new Socket(addip, 9876);
        System.out.println("Client đã được tạo...");

        return sk;
    }

    private String connectToServer() throws Exception {

        Socket sk = connect();

        //3.3 tao luon ket noiw den sever
        DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
        DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

        gui_server.writeUTF("showAll");// gui du lieu len server

        String ketqua = nhan_server.readUTF();
        System.out.println("Client gửi:" + ketqua);//doc tu sever
        sk.close();

        return ketqua;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTop = new javax.swing.JPanel();
        pnlAddNew = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfAddNewProjectID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfAddNewProjectName = new javax.swing.JTextField();
        btnAddNew = new javax.swing.JButton();
        pnlEdit = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfEditProjectID = new javax.swing.JTextField();
        tfEditProjectName = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        pnlBottom = new javax.swing.JPanel();
        sclPaneData = new javax.swing.JScrollPane();
        sclPaneData1 = new javax.swing.JScrollPane();
        tblData = new org.jdesktop.swingx.JXTable();

        setMaximumSize(new java.awt.Dimension(791, 655));
        setMinimumSize(new java.awt.Dimension(791, 655));
        setPreferredSize(new java.awt.Dimension(791, 655));
        setLayout(new java.awt.BorderLayout());

        pnlTop.setPreferredSize(new java.awt.Dimension(671, 160));
        pnlTop.setRequestFocusEnabled(false);
        pnlTop.setLayout(new java.awt.BorderLayout());

        pnlAddNew.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thêm mới dự án", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlAddNew.setPreferredSize(new java.awt.Dimension(671, 80));

        jLabel1.setText("Mã dự án");

        tfAddNewProjectID.setEditable(false);
        tfAddNewProjectID.setEnabled(false);

        jLabel2.setText("Tên dự án");

        btnAddNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_add.png"))); // NOI18N
        btnAddNew.setText("Thêm mới");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddNewLayout = new javax.swing.GroupLayout(pnlAddNew);
        pnlAddNew.setLayout(pnlAddNewLayout);
        pnlAddNewLayout.setHorizontalGroup(
            pnlAddNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddNewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfAddNewProjectID, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfAddNewProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(178, Short.MAX_VALUE))
        );
        pnlAddNewLayout.setVerticalGroup(
            pnlAddNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddNewLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(pnlAddNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfAddNewProjectID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(tfAddNewProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddNew))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pnlTop.add(pnlAddNew, java.awt.BorderLayout.NORTH);

        pnlEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlEdit.setPreferredSize(new java.awt.Dimension(671, 80));

        jLabel4.setText("Mã dự án");

        jLabel3.setText("Tên dự án");

        tfEditProjectID.setEditable(false);
        tfEditProjectID.setEnabled(false);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_save.png"))); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
        pnlEdit.setLayout(pnlEditLayout);
        pnlEditLayout.setHorizontalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfEditProjectID, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfEditProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );
        pnlEditLayout.setVerticalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfEditProjectID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(tfEditProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pnlTop.add(pnlEdit, java.awt.BorderLayout.CENTER);

        add(pnlTop, java.awt.BorderLayout.NORTH);

        pnlBottom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách dự án", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlBottom.setLayout(new java.awt.BorderLayout());

        sclPaneData.setBorder(null);

        sclPaneData1.setBorder(null);

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã dự án", "Tên dự án", "Số nhân viên tham gia"
            }
        ));
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        tblData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDataKeyReleased(evt);
            }
        });
        sclPaneData1.setViewportView(tblData);

        sclPaneData.setViewportView(sclPaneData1);

        pnlBottom.add(sclPaneData, java.awt.BorderLayout.CENTER);

        add(pnlBottom, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        if (validateAddNew()) {
            try {
                Socket sk = connect();
                String chen = "addpro";

                //3.3 tao luon ket noi den sever
                DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

                gui_server.writeUTF(tfAddNewProjectName.getText() + "#" + chen);// gui du lieu len server
                String result = nhan_server.readUTF();
                System.out.println("Kết quả từ server:" + result);//doc tu sever
                sk.close();
                JOptionPane.showMessageDialog(null, "Dự án mới được đưa vào thành công");
                loadTableData();
                tfAddNewProjectName.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            } catch (IOException ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void tblDataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDataKeyReleased
        loadEditData();
}//GEN-LAST:event_tblDataKeyReleased

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        loadEditData();
}//GEN-LAST:event_tblDataMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
//        if (tblData.getSelectedRow() != -1) {
//            if (validateUpdate()) {
//                int rowI = tblData.getSelectedRow();
//                Project proj = projectList.get(rowI);
//                proj.setProjectName(tfEditProjectName.getText());
//                try {
//                    ProjectDAO.updateProject(proj);
//                    tfEditProjectID.setText("");
//                    tfEditProjectName.setText("");
//                    loadTableData();
//                } catch (SQLException ex) {
//                    Logger.getLogger(PnlAdminProjectManage.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (ClassNotFoundException ex) {
//                    Logger.getLogger(PnlAdminProjectManage.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        } else {
//            JOptionPane.showMessageDialog(null, "Bạn phải chọn một hàng trong bảng dưới đây.",
//                    "Không chọn hàng", JOptionPane.INFORMATION_MESSAGE);
//        }
if (tfEditProjectID.getText().compareTo("") != 0) {
            if (validateUpdate()) {
                try {
                    Socket sk = connect();
                    String chen = "editPro";

                    //3.3 tao luon ket noi den sever
                    DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                    DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao
                    int proID = Integer.parseInt(tfEditProjectID.getText());
                    String name = tfEditProjectName.getText();
                    gui_server.writeUTF(proID + "#"+name+"#" + chen);// gui du lieu len server
                    String result = nhan_server.readUTF();
                    System.out.println("Kết quả từ server:" + result);//doc tu sever
                    sk.close();
                    JOptionPane.showMessageDialog(null, "Cập nhật dữ liệu thành công");
                    loadTableData();
                    tfEditProjectName.setText("");
                    tfEditProjectID.setText("");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Không cập nhật được !", "Xóa lỗi", JOptionPane.ERROR_MESSAGE);
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Không cập nhật được !", "Xóa lỗi", JOptionPane.ERROR_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn một hàng trong bảng dưới đây.",
                    "Không có hàng đã chọn", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
if (tfEditProjectID.getText().compareTo("") != 0) {
    if (JOptionPane.showConfirmDialog(null,
                        "Bạn chắc chắn chứ ?",
                        "Cảnh báo",
                        JOptionPane.OK_CANCEL_OPTION)
                        == JOptionPane.OK_OPTION) {
            try {
                // LocationDAO.insertLocation(tfAddLocationName.getText());
                Socket sk = connect();
                String chen = "delePro";

                //3.3 tao luon ket noi den sever
                DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao
                int loID = Integer.parseInt(tfEditProjectID.getText());
                gui_server.writeUTF(loID + "#" + chen);// gui du lieu len server
                String result = nhan_server.readUTF();
                System.out.println("Kết quả từ server:" + result);//doc tu sever
                sk.close();
                JOptionPane.showMessageDialog(null, "Xóa dữ liệu thành công");
                loadTableData();
                tfEditProjectID.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Không xóa được !", "Xóa lỗi", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Không xóa được !", "Xóa lỗi", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private boolean validateAddNew()//Validate to add new Project
    {
        StringBuilder msg = new StringBuilder();
        if (!ValidateFormTools.isFilledTextField(tfAddNewProjectName, true)) {
            msg.append("\n - Tên dự án không được để trống.");
        }

        if (msg.toString().compareTo("") != 0) {
            JOptionPane.showMessageDialog(null,
                    "Có 1 số lỗi" + msg,
                    "Lỗi: Thêm mới",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private boolean validateDelete() //Ensure there are no Transfer or Employee link to this Project
    {
        int rowI = tblData.getSelectedRow();
        Project proj = projectList.get(rowI);

        if (proj.getFromTransferCount() == 0 && proj.getToTransferCount() == 0 && proj.getNumberOfEmployees() == 0) {
            return true;
        } else {
            JOptionPane.showMessageDialog(null,
                    "Bạn không thể xóa những dự án này.",
                    "Lỗi: Xóa",
                    JOptionPane.ERROR_MESSAGE);
            return false;

        }
    }

    private boolean validateUpdate() //Validate to edit an Project
    {
        StringBuilder msg = new StringBuilder();
        if (!ValidateFormTools.isFilledTextField(tfEditProjectName, true)) {
            msg.append("\n - Tên dự án không được để trống.");
        }

        if (msg.toString().compareTo("") != 0) {
            JOptionPane.showMessageDialog(null,
                    "Có 1 số lỗi" + msg,
                    "Lỗi: Sửa",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }
    private void loadEditData()//Nhận dữ liệu từ bảng để chỉnh sửa , khi người dùng click vào một hàng hoặc sử dụng phím lên / xuống
    {
        int index = tblData.getSelectedRow();
        TableModel model = tblData.getModel();
        tfEditProjectID.setText(model.getValueAt(index, 0).toString());
        tfEditProjectName.setText(model.getValueAt(index, 1).toString());
    }
    private void loadTableData() {

        Socket sk;
        try {
            sk = connect();
            String chen = "xemDataProject";

            //3.3 tao luon ket noi den sever
            DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
            DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

            gui_server.writeUTF("#" + chen);// gui du lieu len server
            String result = nhan_server.readUTF();
            System.out.println("Server trả về: " + result);//doc tu sever
            handleReturnData(result);

            sk.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,
                    "Kết nối đến server thât bại.",
                    "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    private void handleReturnData(String result) {

        DefaultTableModel model = (DefaultTableModel) tblData.getModel();//xuat ra tabe
        model.getDataVector().clear();
        if (null != result && !result.equals("OK") && !result.equals("DBError")) {
            String[] students = result.split(";");
            if (null != students && students.length != 0) {
                for (int i = 0; i < students.length; i++) {
                    String student = students[i];
                    if (null != student && !student.isEmpty()) {
                        String[] parts = student.split(",");
                        model.addRow(new Object[]{parts[0], parts[1],parts[2]});
                    }
                }
            }
        }
    }

    DefaultTableModel tblModel;
    List<Project> projectList;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel pnlAddNew;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JScrollPane sclPaneData;
    private javax.swing.JScrollPane sclPaneData1;
    private org.jdesktop.swingx.JXTable tblData;
    private javax.swing.JTextField tfAddNewProjectID;
    private javax.swing.JTextField tfAddNewProjectName;
    private javax.swing.JTextField tfEditProjectID;
    private javax.swing.JTextField tfEditProjectName;
    // End of variables declaration//GEN-END:variables
}
