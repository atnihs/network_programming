package Giaodien;

import static Giaodien.PnlAdminDepartmentManage.IpAddress;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import XyLyDuLieu.*;
import TienIch.ValidateFormTools;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableModel;

public class PnlAdminLocationManage extends javax.swing.JPanel {

    public static String IpAddress;

    /**
     * Creates new form ManageLocation
     */
    public PnlAdminLocationManage() {
        initComponents();
        loadTableData();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTop = new javax.swing.JPanel();
        pnlAdd = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfAddLocationName = new javax.swing.JTextField();
        btnAddNew = new javax.swing.JButton();
        pnlEdit = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        tfEditLocationId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfEditLocationName = new javax.swing.JTextField();
        pnlBottom = new javax.swing.JPanel();
        spnlLocationData = new javax.swing.JScrollPane();
        spnlLocationData1 = new javax.swing.JScrollPane();
        tblData = new org.jdesktop.swingx.JXTable();

        setMaximumSize(new java.awt.Dimension(791, 655));
        setMinimumSize(new java.awt.Dimension(791, 655));
        setPreferredSize(new java.awt.Dimension(791, 655));
        setLayout(new java.awt.BorderLayout());

        pnlTop.setLayout(new java.awt.BorderLayout());

        pnlAdd.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thêm địa chỉ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlAdd.setPreferredSize(new java.awt.Dimension(554, 120));

        jLabel2.setText("Địa chỉ");

        tfAddLocationName.setMaximumSize(null);

        btnAddNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_add.png"))); // NOI18N
        btnAddNew.setText("Thêm mới");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddLayout = new javax.swing.GroupLayout(pnlAdd);
        pnlAdd.setLayout(pnlAddLayout);
        pnlAddLayout.setHorizontalGroup(
            pnlAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(tfAddLocationName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(341, 341, 341))
        );
        pnlAddLayout.setVerticalGroup(
            pnlAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfAddLocationName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddNew))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pnlTop.add(pnlAdd, java.awt.BorderLayout.NORTH);

        pnlEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlEdit.setPreferredSize(new java.awt.Dimension(554, 150));

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_save.png"))); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel3.setText("Mã địa chỉ");

        tfEditLocationId.setEditable(false);
        tfEditLocationId.setEnabled(false);
        tfEditLocationId.setMaximumSize(null);

        jLabel4.setText("Địa chỉ");

        tfEditLocationName.setMaximumSize(null);

        javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
        pnlEdit.setLayout(pnlEditLayout);
        pnlEditLayout.setHorizontalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfEditLocationId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEditLocationName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(153, 153, 153))
        );
        pnlEditLayout.setVerticalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave)
                    .addComponent(tfEditLocationId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete)
                    .addComponent(tfEditLocationName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pnlTop.add(pnlEdit, java.awt.BorderLayout.CENTER);

        add(pnlTop, java.awt.BorderLayout.NORTH);

        pnlBottom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách địa chỉ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlBottom.setLayout(new java.awt.BorderLayout());

        spnlLocationData.setBorder(null);

        spnlLocationData1.setBorder(null);

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã địa điểm", "Tên địa điểm", "Số nhân sự"
            }
        ));
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        tblData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDataKeyReleased(evt);
            }
        });
        spnlLocationData1.setViewportView(tblData);

        spnlLocationData.setViewportView(spnlLocationData1);

        pnlBottom.add(spnlLocationData, java.awt.BorderLayout.CENTER);

        add(pnlBottom, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
private Socket connect() throws Exception {
        //1.client: tao socket ket noi den server cho phep ket noi o cong 8080
        String addip;
        addip = IpAddress;
        Socket sk = new Socket(addip, 9876);
        System.out.println("Client đã được tạo ...");

        return sk;
    }

    private String connectToServer() throws Exception {

        Socket sk = connect();

        //3.3 tao luon ket noiw den sever
        DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
        DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

        gui_server.writeUTF("showAll");// gui du lieu len server

        String ketqua = nhan_server.readUTF();
        System.out.println("Client gửi:" + ketqua);//doc tu sever
        sk.close();

        return ketqua;
    }
    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        if (validateAddNew()) {
            //Location locationObj = new Location();
            //locationObj.setLocationName(tfAddLocationName.getText());

            try {
                // LocationDAO.insertLocation(tfAddLocationName.getText());
                Socket sk = connect();
                String chen = "addloca";

                //3.3 tao luon ket noi den sever
                DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

                gui_server.writeUTF(tfAddLocationName.getText() + "#" + chen);// gui du lieu len server
                String result = nhan_server.readUTF();
                System.out.println("Kết quả từ server:" + result);//doc tu sever
                sk.close();
                JOptionPane.showMessageDialog(null, "Chèn dữ liệu thành công");
                loadTableData();
                tfAddLocationName.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (tfEditLocationId.getText().compareTo("") != 0) {
            if (validateUpdate()) {
                try {
                    Socket sk = connect();
                    String chen = "editloca";

                    //3.3 tao luon ket noi den sever
                    DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                    DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao
                    int loID = Integer.parseInt(tfEditLocationId.getText());
                    String name = tfEditLocationName.getText();
                    gui_server.writeUTF(loID + "#"+name+"#" + chen);// gui du lieu len server
                    String result = nhan_server.readUTF();
                    System.out.println("Kết quả từ server:" + result);//doc tu sever
                    sk.close();
                    JOptionPane.showMessageDialog(null, "Cập nhật dữ liệu thành công");
                    loadTableData();
                    tfAddLocationName.setText("");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Không cập nhật được !", "xóa lỗi", JOptionPane.ERROR_MESSAGE);
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Không cập nhật được !", "xóa lỗi", JOptionPane.ERROR_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn một hàng trong bảng dưới đây.",
                    "Không có hàng đã chọn", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblDataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDataKeyReleased
        loadEditData();
}//GEN-LAST:event_tblDataKeyReleased
    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        loadEditData();
}//GEN-LAST:event_tblDataMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (tfEditLocationId.getText().compareTo("") != 0) {
            if (JOptionPane.showConfirmDialog(null,
                        "Bạn chắc chắn chứ ?",
                        "Cảnh báo",
                        JOptionPane.OK_CANCEL_OPTION)
                        == JOptionPane.OK_OPTION) {
            try {
                // LocationDAO.insertLocation(tfAddLocationName.getText());
                Socket sk = connect();
                String chen = "deleteloca";

                //3.3 tao luon ket noi den sever
                DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao
                int loID = Integer.parseInt(tfEditLocationId.getText());
                gui_server.writeUTF(loID + "#" + chen);// gui du lieu len server
                String result = nhan_server.readUTF();
                System.out.println("Kết quả từ server:" + result);//doc tu sever
                sk.close();
                JOptionPane.showMessageDialog(null, "Xóa dữ liệu thành công");
                loadTableData();
                tfAddLocationName.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Không xóa được !", "Xóa lỗi", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Không xóa được !", "Xóa lỗi", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private boolean validateDelete() {
        int rowIndex = tblData.getSelectedRow();
        Location location = locationList.get(rowIndex);

        if (location.getFromTransferCount() == 0 && location.getNumberOfEmployees() == 0 && location.getToTransferCount() == 0)//Ensure there are no depending Object
        {
            return true;
        } else {
            JOptionPane.showMessageDialog(null,
                    "Bạn không thể xóa địa chỉ này.\n Có 1 số nhân viên tại địa chỉ này",
                    "Lỗi: Xóa",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private void loadEditData()//Nhận dữ liệu từ bảng để chỉnh sửa , khi người dùng click vào một hàng hoặc sử dụng phím lên / xuống
    {
        /*int rowIndex = tblData.getSelectedRow();
        if (rowIndex != -1) {
            Location location = locationList.get(rowIndex);
            tfEditLocationId.setText(String.valueOf(location.getLocationID()));
            tfEditLocationName.setText(location.getLocationName());
            }*/
        int index = tblData.getSelectedRow();
        TableModel model = tblData.getModel();
        tfEditLocationId.setText(model.getValueAt(index, 0).toString());
        tfEditLocationName.setText(model.getValueAt(index, 1).toString());
    }

    private boolean validateAddNew() {
        String msg = "";
        if (!ValidateFormTools.isFilledTextField(tfAddLocationName, true))//cắt các văn bản trong tfAddDepartmentName, kiểm tra trống , check blank
        {
            msg += "\n- Tên địa chỉ mới không được để trống.";
        }
        tfAddLocationName.setText(tfAddLocationName.getText().trim());
        /*If there are error : Diplay error*/
        if (msg.compareTo("") != 0) {
            JOptionPane.showMessageDialog(null,
                    "Có 1 số lỗi" + msg,
                    "Lỗi: Thêm mới",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private boolean validateUpdate() {
        String msg = "";
        if (!ValidateFormTools.isFilledTextField(tfEditLocationName, true)) {
            msg += "\n- Tên địa chỉ mới không được để trống.";
        }
        tfEditLocationName.setText(tfEditLocationName.getText().trim());

        /*If there are error : Diplay error*/
        if (msg.compareTo("") != 0) {
            JOptionPane.showMessageDialog(null,
                    "Có 1 số lỗi" + msg,
                    "Lỗi: Cập nhật",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private void handleReturnData(String result) {

        DefaultTableModel model = (DefaultTableModel) tblData.getModel();//xuat ra tabe
        model.getDataVector().clear();
        if (null != result && !result.equals("OK") && !result.equals("DBError")) {
            String[] students = result.split(";");
            if (null != students && students.length != 0) {
                for (int i = 0; i < students.length; i++) {
                    String student = students[i];
                    if (null != student && !student.isEmpty()) {
                        String[] parts = student.split(",");
                         model.addRow(new Object[]{parts[0], parts[1], parts[2]});
                       // model.addRow(new Object[]{parts[0], parts[1]});
                    }
                }
            }
        }
    }

    private void loadTableData() {
        Socket sk;
        try {
            sk = connect();
            String chen = "xemDataLocatiom";

            //3.3 tao luon ket noi den sever
            DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
            DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

            gui_server.writeUTF("#" + chen);// gui du lieu len server
            String result = nhan_server.readUTF();
            System.out.println("Server trả về: " + result);//doc tu sever
            handleReturnData(result);

            sk.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,
                    "Kết nối đến server thât bại.",
                    "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
        }

    }
    DefaultTableModel tblModel;
    List<Location> locationList;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel pnlAdd;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JScrollPane spnlLocationData;
    private javax.swing.JScrollPane spnlLocationData1;
    private org.jdesktop.swingx.JXTable tblData;
    private javax.swing.JTextField tfAddLocationName;
    private javax.swing.JTextField tfEditLocationId;
    private javax.swing.JTextField tfEditLocationName;
    // End of variables declaration//GEN-END:variables
}
