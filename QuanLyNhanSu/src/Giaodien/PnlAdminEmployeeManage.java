/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * EmployeeUIPanel.java
 *
 * Created on 07-05-2010, 19:55:35
 */
package Giaodien;

import static Giaodien.PnlAdminLocationManage.IpAddress;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import XyLyDuLieu.*;
import TienIch.*;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author Hoang Dong Tien
 */
public class PnlAdminEmployeeManage extends javax.swing.JPanel {

    public static String IpAddress;

    /**
     * Creates new form EmployeeUIPanel
     */
    public PnlAdminEmployeeManage() {
        initComponents();
        loadDataToComboBox();
        loadTableData();
        tfEditEmployeeID.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupAdmin = new javax.swing.ButtonGroup();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        tabbedPane = new javax.swing.JTabbedPane();
        tabViewEdit = new javax.swing.JPanel();
        pnlEditEmp = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        tfEditFullname = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        tfEditUsername = new javax.swing.JTextField();
        tfEditEmployeeID = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        scrlpnlData = new javax.swing.JScrollPane();
        tblData = new org.jdesktop.swingx.JXTable();
        pnlSearchCondition = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        cboSearchLocation = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        cboSearchDepartment = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        cboSearchProject = new javax.swing.JComboBox();
        btnSearch = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        tfSearchFullname = new javax.swing.JTextField();
        lblNhanVien = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tabAddNew = new javax.swing.JPanel();
        pnlAddEmp = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfAddFullname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cboAddLocation = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboAddDepartment = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        cboAddProject = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        tfAddPassword1 = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        tfAddPassword2 = new javax.swing.JPasswordField();
        jLabel21 = new javax.swing.JLabel();
        tfAddUsername = new javax.swing.JTextField();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setPreferredSize(new java.awt.Dimension(791, 655));
        setLayout(new java.awt.BorderLayout());

        tabbedPane.setMaximumSize(new java.awt.Dimension(791, 600));
        tabbedPane.setMinimumSize(new java.awt.Dimension(791, 600));
        tabbedPane.setPreferredSize(new java.awt.Dimension(791, 600));

        tabViewEdit.setPreferredSize(new java.awt.Dimension(300, 600));
        tabViewEdit.setLayout(new java.awt.BorderLayout());

        pnlEditEmp.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlEditEmp.setPreferredSize(new java.awt.Dimension(170, 175));
        pnlEditEmp.setRequestFocusEnabled(false);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_save.png"))); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel8.setText("Tên đầy đủ");

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel20.setText("Tên đăng nhập");

        tfEditUsername.setEditable(false);
        tfEditUsername.setEnabled(false);

        tfEditEmployeeID.setEditable(false);
        tfEditEmployeeID.setEnabled(false);

        jLabel23.setText("Mã nhân viên");

        javax.swing.GroupLayout pnlEditEmpLayout = new javax.swing.GroupLayout(pnlEditEmp);
        pnlEditEmp.setLayout(pnlEditEmpLayout);
        pnlEditEmpLayout.setHorizontalGroup(
            pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfEditEmployeeID, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfEditFullname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfEditUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(268, Short.MAX_VALUE))
        );
        pnlEditEmpLayout.setVerticalGroup(
            pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditEmpLayout.createSequentialGroup()
                        .addGroup(pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfEditUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel20))
                            .addComponent(btnSave))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfEditFullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditEmpLayout.createSequentialGroup()
                        .addGroup(pnlEditEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfEditEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(35, 35, 35)))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        tabViewEdit.add(pnlEditEmp, java.awt.BorderLayout.PAGE_END);

        scrlpnlData.setMaximumSize(new java.awt.Dimension(32767, 20000));
        scrlpnlData.setPreferredSize(new java.awt.Dimension(300, 250));
        scrlpnlData.setRequestFocusEnabled(false);

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stt", "Tài khoản", "Họ tên", "Địa chỉ", "Phòng ban", "Thuộc dự án"
            }
        ));
        tblData.setEditable(false);
        tblData.setSortable(false);
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        tblData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDataKeyReleased(evt);
            }
        });
        scrlpnlData.setViewportView(tblData);

        tabViewEdit.add(scrlpnlData, java.awt.BorderLayout.CENTER);

        pnlSearchCondition.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlSearchCondition.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlSearchCondition.setMaximumSize(null);
        pnlSearchCondition.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel15.setText("Địa chỉ");

        jLabel16.setText("Phòng ban");

        cboSearchDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSearchDepartmentActionPerformed(evt);
            }
        });

        jLabel17.setText("Dự án");

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_search.png"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel19.setText("Tên");

        lblNhanVien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNhanVien.setForeground(new java.awt.Color(255, 51, 51));
        lblNhanVien.setText("name");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Nhân Viên: ");

        javax.swing.GroupLayout pnlSearchConditionLayout = new javax.swing.GroupLayout(pnlSearchCondition);
        pnlSearchCondition.setLayout(pnlSearchConditionLayout);
        pnlSearchConditionLayout.setHorizontalGroup(
            pnlSearchConditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSearchConditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSearchDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                        .addGroup(pnlSearchConditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboSearchLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfSearchFullname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addGroup(pnlSearchConditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboSearchProject, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblNhanVien)))))
                .addContainerGap(263, Short.MAX_VALUE))
        );
        pnlSearchConditionLayout.setVerticalGroup(
            pnlSearchConditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(pnlSearchConditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                        .addGroup(pnlSearchConditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(cboSearchProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(cboSearchLocation)
                            .addComponent(btnSearch))
                        .addGap(34, 34, 34))
                    .addGroup(pnlSearchConditionLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(pnlSearchConditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(cboSearchDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlSearchConditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(tfSearchFullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(lblNhanVien))
                .addGap(44, 44, 44))
        );

        tabViewEdit.add(pnlSearchCondition, java.awt.BorderLayout.PAGE_START);

        tabbedPane.addTab("Nhân viên", new javax.swing.ImageIcon(getClass().getResource("/images/table.png")), tabViewEdit); // NOI18N

        tabAddNew.setPreferredSize(new java.awt.Dimension(350, 330));
        tabAddNew.setLayout(new java.awt.BorderLayout());

        pnlAddEmp.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        pnlAddEmp.setPreferredSize(new java.awt.Dimension(150, 250));
        pnlAddEmp.setRequestFocusEnabled(false);

        jLabel1.setText("Tên đầy đủ");

        jLabel2.setText("Địa chỉ");

        cboAddLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboAddLocation.setMaximumSize(null);

        jLabel3.setText("Phòng ban");

        jLabel4.setText("Mật khẩu");

        cboAddDepartment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboAddDepartment.setMaximumSize(null);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_add.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        cboAddProject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Phát triển giống cây trồng và nguồn lợi thuỷ sản", "Item 3", "Item 4" }));
        cboAddProject.setMaximumSize(null);
        cboAddProject.setMinimumSize(new java.awt.Dimension(56, 18));

        jLabel5.setText("Dự án");

        jLabel7.setText("Nhắc lại mật khẩu");

        jLabel21.setText("Tên đăng nhập");

        javax.swing.GroupLayout pnlAddEmpLayout = new javax.swing.GroupLayout(pnlAddEmp);
        pnlAddEmp.setLayout(pnlAddEmpLayout);
        pnlAddEmpLayout.setHorizontalGroup(
            pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddEmpLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAddEmpLayout.createSequentialGroup()
                        .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAddEmpLayout.createSequentialGroup()
                                .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfAddFullname)
                                    .addComponent(tfAddUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlAddEmpLayout.createSequentialGroup()
                                .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfAddPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfAddPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAddEmpLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboAddLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlAddEmpLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboAddDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlAddEmpLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboAddProject, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlAddEmpLayout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154)))
                .addContainerGap(369, Short.MAX_VALUE))
        );
        pnlAddEmpLayout.setVerticalGroup(
            pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAddEmpLayout.createSequentialGroup()
                        .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboAddLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboAddDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboAddProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAddEmpLayout.createSequentialGroup()
                        .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfAddFullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(tfAddUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfAddPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tfAddPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(28, 28, 28)
                .addComponent(btnAdd)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        tabAddNew.add(pnlAddEmp, java.awt.BorderLayout.NORTH);

        tabbedPane.addTab("Thêm mới nhân viên", new javax.swing.ImageIcon(getClass().getResource("/images/contact-new.png")), tabAddNew); // NOI18N

        add(tabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    private Socket connect() throws Exception {
        //1.client: tao socket ket noi den server cho phep ket noi o cong 8080
        String addip;
        addip = IpAddress;
        Socket sk = new Socket(addip, 9876);
        System.out.println("Client đã được tạo...");

        return sk;
    }

    private String connectToServer() throws Exception {

        Socket sk = connect();

        //3.3 tao luon ket noiw den sever
        DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
        DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

        gui_server.writeUTF("showAll");// gui du lieu len server

        String ketqua = nhan_server.readUTF();
        System.out.println("Client gửi:" + ketqua);//doc tu sever
        sk.close();

        return ketqua;
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (validateAddNew()) {
            try {
                // LocationDAO.insertLocation(tfAddLocationName.getText());
                Socket sk = connect();
                String chen = "addEmploy";

                //3.3 tao luon ket noi den sever
                DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao
                int locationID = locationLst.get(cboAddLocation.getSelectedIndex()).getLocationID();
                int departmentID = departmentLst.get(cboAddDepartment.getSelectedIndex()).getDepartmentID();
                int projectID = projectLst.get(cboAddProject.getSelectedIndex()).getProjectID();
                gui_server.writeUTF(tfAddFullname.getText() + "#" + tfAddUsername.getText() + "#" + tfAddPassword1.getText()
                        + "#" + projectID + "#" + departmentID + "#" + locationID + "#" + chen);// gui du lieu len server
                String result = nhan_server.readUTF();
                System.out.println("ket qua tu server:" + result);//doc tu sever
                sk.close();
                JOptionPane.showMessageDialog(null, "Chèn dữ liệu thành công");
                loadTableData();
                tfAddFullname.setText("");
                tfAddPassword1.setText("");
                tfAddPassword2.setText("");
                tfAddUsername.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblDataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDataKeyReleased
//        if (tblData.getSelectedRow() != -1) {
//            loadEditData();
//        }
        loadEditData();
    }//GEN-LAST:event_tblDataKeyReleased

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        // if (tblData.getSelectedRow() != -1) {
        loadEditData();
        //}
    }//GEN-LAST:event_tblDataMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (tblData.getSelectedRow() != -1) {
          //  if (validateDelete()) {

                if (JOptionPane.showConfirmDialog(null,
                        "Bạn chắc chắn chứ ?",
                        "Cảnh báo",
                        JOptionPane.OK_CANCEL_OPTION)
                        == JOptionPane.OK_OPTION) {
                    try {
                        
                        EmployeeDAO.deleteEmployee(Integer.parseInt(tfEditEmployeeID.getText()));
                        JOptionPane.showMessageDialog(null, "Xóa thành công");
                      
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Xóa thành công !", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        ex.printStackTrace();
                        loadTableData();
                        clearEditData();
                         
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(null, "Xóa data thất bại !", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        ex.printStackTrace();
                    }

                }
                

          //  }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (tfEditEmployeeID.getText().compareTo("") != 0) {
            if (validateEdit()) {
                try {
                    Socket sk = connect();
                    String chen = "editEmploy";

                    //3.3 tao luon ket noi den sever
                    DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
                    DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao
                    int employ = Integer.parseInt(tfEditEmployeeID.getText());
                    String name = tfEditFullname.getText();
                    gui_server.writeUTF(employ + "#" + name + "#" + chen);// gui du lieu len server
                    String result = nhan_server.readUTF();
                    System.out.println("Kết quả từ server:" + result);//doc tu sever
                    sk.close();
                    JOptionPane.showMessageDialog(null, "Cập nhật dữ liệu thành công");
                    loadTableData();
                    //ocationName.setText("");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Không cập nhật được !", "xóa lỗi", JOptionPane.ERROR_MESSAGE);
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Không cập nhật được !", "xóa lỗi", JOptionPane.ERROR_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn phải chọn 1 dòng ở trong bảng.",
                    "Không có dòng nào được chọn!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            // LocationDAO.insertLocation(tfAddLocationName.getText());
            Socket sk = connect();
            String chen = "searchEmploy";

            //3.3 tao luon ket noi den sever
            DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
            DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao
            int locationID = locationLst.get(cboSearchLocation.getSelectedIndex()).getLocationID();
            int departmentID = departmentLst.get(cboSearchDepartment.getSelectedIndex()).getDepartmentID();
            int projectID = projectLst.get(cboSearchProject.getSelectedIndex()).getProjectID();
            gui_server.writeUTF(tfSearchFullname.getText() + "#" + locationID + "#" + departmentID + "#" + projectID + "#" + chen);// gui du lieu len server
            String result = nhan_server.readUTF();
            // System.out.println("ket qua tu server:" + result);//doc tu sever
            String[] students = result.split(";");
            if (null != students && students.length != 0) {
                handleReturnData(result);
                JOptionPane.showMessageDialog(null, "Tìm thấy " + students.length + " nhân sự");
            } else {
                JOptionPane.showMessageDialog(null, "không tìm thấy nhân sự nào!");
            }

            sk.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Không chèn được !", "Chèn lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(PnlAdminDepartmentManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cboSearchDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSearchDepartmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSearchDepartmentActionPerformed

    private void loadEditData()//Load Data from table, when user click to chose a row on Table
    {
        int index = tblData.getSelectedRow();
        TableModel model = tblData.getModel();
        tfEditEmployeeID.setText(model.getValueAt(index, 0).toString());
        tfEditUsername.setText(model.getValueAt(index, 1).toString());
        tfEditFullname.setText(model.getValueAt(index, 2).toString());
        lblNhanVien.setText(model.getValueAt(index, 2).toString());
       // chinh.setSelected(false);ngay.setSelected(false);dem.setSelected(false);

    }

    private void loadTableData() {
        Socket sk;
        try {
            sk = connect();
            String chen = "xemDataEmploy";

            //3.3 tao luon ket noi den sever
            DataOutputStream gui_server = new DataOutputStream(sk.getOutputStream());// tao luon gui di
            DataInputStream nhan_server = new DataInputStream(sk.getInputStream());// tao luon nhan vao

            gui_server.writeUTF("#" + chen);// gui du lieu len server
            String result = nhan_server.readUTF();
            System.out.println("Server trả về: " + result);//doc tu sever
            handleReturnData(result);

            sk.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,
                    "Kết nối đến server thât bại.",
                    "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    private void handleReturnData(String result) {

        DefaultTableModel model = (DefaultTableModel) tblData.getModel();//xuat ra tabe
        model.getDataVector().clear();
        if (null != result && !result.equals("OK") && !result.equals("DBError")) {
            String[] students = result.split(";");
            if (null != students && students.length != 0) {
                for (int i = 0; i < students.length; i++) {
                    String student = students[i];
                    if (null != student && !student.isEmpty()) {
                        String[] parts = student.split(",");
                        model.addRow(new Object[]{parts[0], parts[1], parts[2], parts[3], parts[4], parts[5]});
                    }
                }
            }
        }
    }

    private void loadData()//Load data from DB to Table, use ConditionString base on Filter
    {
         
        try {
            empLst = null;
            empLst = EmployeeDAO.selectAllEmployeeByCondition(makeConditionString());

            String[] cols = new String[]{"ID", "Fullame", "Username", "Role", "Location", "Department", "Project", "Is Admin" };
            mdlTable = new DefaultTableModel(null, cols);
            for (Employee emp : empLst) {
                Vector row = new Vector();
                row.add(emp.getEmployeeID());
                row.add(emp.getEmployeeName());
                row.add(emp.getUsername());
                row.add(emp.getRole().getRoleName());
                row.add(emp.getLocation().getLocationName());
                row.add(emp.getDepartment().getDepartmentName());
                row.add(emp.getProject().getProjectName());
                if (emp.isSystemAdmin()) {
                    row.add("Yes");
                } else {
                    row.add("No");
                }
            //    row.add(emp.getNumberOfTransfer());
                mdlTable.addRow(row);
            }
            tblData.setModel(mdlTable);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DialogSelectEmployee.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DialogSelectEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private String makeConditionString()//make SQL condition String from Filter to select Data from DB
    {
        StringBuilder condition = new StringBuilder();
        condition.append(" 1=1 ");/*append this to add AND clause later*/
        int dept = cboSearchDepartment.getSelectedIndex() - 1;
        int location = cboSearchLocation.getSelectedIndex() - 1;
        int project = cboSearchProject.getSelectedIndex() - 1;

        /*Make condition String from ComboBox*/
        if (dept >= 0) {
            condition.append(" AND Employees.DepartmentID = ");
            condition.append(departmentLst.get(dept).getDepartmentID());
        }
        if (location >= 0) {
            condition.append(" AND Employees.LocationID = ");
            condition.append(locationLst.get(location).getLocationID());
        }
        if (project >= 0) {
            condition.append(" AND Employees.ProjectID = ");
            condition.append(projectLst.get(project).getProjectID());
        }


        /*Make condion Fullname input*/
        String empName = tfSearchFullname.getText().trim();
        if (empName.compareTo("") != 0) {
            while (empName.contains("  ")) {
                empName = empName.replace("  ", " ");
            }//Normalize input String
            empName = empName.replace(" ", "%' OR Employees.EmployeeName LIKE N'%");//add Like Clause

            StringBuilder empNameCond = new StringBuilder();
            empNameCond.append(" AND (Employees.EmployeeName LIKE N'%");
            empNameCond.append(empName);
            empNameCond.append("%' )");
            condition.append(empNameCond.toString());
        }

        //System.out.println(condition.toString());
        return condition.toString();
    }

    private boolean validateAddNew()//Validate the add new Employee Form
    {
        String msg = "";
        /*Check DepartmentName not = "" */
        if (!ValidateFormTools.isFilledTextField(tfAddFullname, true))//trim the text in tfAddDepartmentName , check blank
        {
            msg += "\n- Employee Fullname không được để trống.";
        }
        tfAddFullname.setText(tfAddFullname.getText().trim());

        /*Check Username blank or not*/
        if (!ValidateFormTools.isFilledTextField(tfAddUsername, true))//trim the text in tfAddDepartmentName , check blank
        {
            msg += "\n- Employee username không được để trống.";
        }
        tfAddUsername.setText(tfAddUsername.getText().trim());

        /*Check Username is not containing space*/
        if (tfAddUsername.getText().contains(" ")) {
            msg += "\n- Employee username không được có khoảng trắng.";
        }
        String username = tfAddUsername.getText();
        while (username.contains(" ")) {
            username = username.replace(" ", "");
        }
        tfAddUsername.setText(username);

        /*Check Username is avaiable in DB*/
        try {
            if (!EmployeeDAO.isAvaiableUsername(tfAddUsername.getText())) {
                msg += "\n- Employee username không có tên này trong CSDL. Vui lòng chọn tên khác!";
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PnlAdminEmployeeManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PnlAdminEmployeeManage.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*Check Password not blank*/
        if (String.valueOf(tfAddPassword1.getPassword()).compareTo("") == 0) {
            msg += "\n- Password không được để trống.";
        }

        /*Check Repeat Password not blank*/
        if (!ValidateFormTools.isSamePassword(tfAddPassword1, tfAddPassword2)) {
            msg += "\n- Repeat password không khớp";
        }

        if (msg.compareTo("") != 0) {
            JOptionPane.showMessageDialog(null,
                    "Oops ! Đã có lỗi, vui lòng thử lại ..." + msg,
                    "Lỗi mới: ",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private boolean validateEdit()//Validate the edit Employee Form
    {
        String msg = "";
        /*Check DepartmentName not = "" */
        if (!ValidateFormTools.isFilledTextField(tfEditFullname, true))//trim the text in tfEditDepartmentName , check blank
        {
            msg += "\n- New Employee Fullname không được để trống.";
        }
        tfEditFullname.setText(tfEditFullname.getText().trim());

        /*Check Password not blank*/
 /*if (String.valueOf(tfEditPassword1.getPassword()).compareTo("") == 0) {
            msg += "\n- Password cannot be blank";
        }

        if (!ValidateFormTools.isSamePassword(tfEditPassword1, tfEditPassword2)) {
            msg += "\n- Repeat password not correct";
        }
         */
        if (msg.compareTo("") != 0) {
            JOptionPane.showMessageDialog(null,
                    "Oops ! Đã có lỗi, vui lòng thử lại ..." + msg,
                    "Cập nhật lỗi ....",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private void clearEditData() {
        //tfEditDepartmentName.setText("");
        tfEditEmployeeID.setText("");
        tfEditFullname.setText("");
        //tfEditLocationName.setText("");
        //tfEditProjectName.setText("");
        tfEditUsername.setText("");
    }

    private boolean validateDelete() {
        int rowI = tblData.getSelectedRow();
        int trans = empLst.get(rowI).getNumberOfTransfer();
        if (trans != 0) {
            JOptionPane.showMessageDialog(null,
                     "Oops! Bạn không thể xóa nhân viên này vì một số ràng buộc đối với nhân viên này trong CSDL.",
                    "Xóa lỗi ...",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    /*Load Data From DB and add to combo boxes*/
    private void loadDataToComboBox() {
        try {
            /*Load Locations*/
            locationLst = LocationDAO.selectAllLocation();
            cboAddLocation.removeAllItems();
            cboSearchLocation.removeAllItems();

            cboSearchLocation.addItem("All Location");
            for (Location location : locationLst) {
                cboAddLocation.addItem(location.getLocationName());
                cboSearchLocation.addItem(location.getLocationName());
            }

            /*Load Department*/
            departmentLst = DepartmentDAO.selectAllDepartment();
            cboAddDepartment.removeAllItems();

            cboSearchDepartment.removeAllItems();
            cboSearchDepartment.addItem("All Department");
            for (Department dept : departmentLst) {
                cboAddDepartment.addItem(dept.getDepartmentName());
                cboSearchDepartment.addItem(dept.getDepartmentName());
            }

            /*Load Projects*/
            projectLst = ProjectDAO.selectAllProject();
            cboAddProject.removeAllItems();
            cboSearchProject.removeAllItems();
            cboSearchProject.addItem("All Project");
            for (Project proj : projectLst) {
                cboAddProject.addItem(proj.getProjectName());
                cboSearchProject.addItem(proj.getProjectName());
            }

        } catch (SQLException ex) {
            Logger.getLogger(DialogSelectEmployee.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DialogSelectEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    List<Location> locationLst;
    List<Department> departmentLst;
    List<Project> projectLst;
    List<Role> roleLst;
    List<Employee> empLst;
    DefaultTableModel mdlTable;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.ButtonGroup btnGroupAdmin;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cboAddDepartment;
    private javax.swing.JComboBox cboAddLocation;
    private javax.swing.JComboBox cboAddProject;
    private javax.swing.JComboBox cboSearchDepartment;
    private javax.swing.JComboBox cboSearchLocation;
    private javax.swing.JComboBox cboSearchProject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblNhanVien;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JPanel pnlAddEmp;
    private javax.swing.JPanel pnlEditEmp;
    private javax.swing.JPanel pnlSearchCondition;
    private javax.swing.JScrollPane scrlpnlData;
    private javax.swing.JPanel tabAddNew;
    private javax.swing.JPanel tabViewEdit;
    private javax.swing.JTabbedPane tabbedPane;
    private org.jdesktop.swingx.JXTable tblData;
    private javax.swing.JTextField tfAddFullname;
    private javax.swing.JPasswordField tfAddPassword1;
    private javax.swing.JPasswordField tfAddPassword2;
    private javax.swing.JTextField tfAddUsername;
    private javax.swing.JTextField tfEditEmployeeID;
    private javax.swing.JTextField tfEditFullname;
    private javax.swing.JTextField tfEditUsername;
    private javax.swing.JTextField tfSearchFullname;
    // End of variables declaration//GEN-END:variables
}
